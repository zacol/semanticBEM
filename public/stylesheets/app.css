/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

* {
  box-sizing: border-box; }

.container {
  width: 100%;
  max-width: 1024px;
  margin: 50px auto;
  padding: 0 20px; }

.row + .row {
  margin-top: 20px; }

hr {
  margin: 50px 0; }

.btn {
  display: inline-block;
  vertical-align: baseline;
  min-height: 36px;
  padding: 11px 20px;
  outline: 0;
  border: none;
  border-radius: 4px;
  box-shadow: 0 0 0 1px transparent inset;
  background-color: #e0e1e2;
  color: rgba(0, 0, 0, 0.6);
  font-family: Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-size: 14px;
  font-style: normal;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  transition: opacity .250s ease,  background-color .250s ease, color .250s ease, box-shadow .250s ease, background .250s ease;
  /********
      Types
    *********/
  /* Basic */
  /*********
      Colors
    **********/
  /* Primary */
  /* Secondary */
  /* Positive */
  /* Negative */
  /**********************
      Global modificators
    ***********************/
  /* Disabled */
  /* Fluid */
  /* Truncate */
  /* Loading */ }
  .btn:hover, .btn:focus, .btn:active {
    background-color: #cacbcd;
    color: rgba(0, 0, 0, 0.9); }
  .btn--basic {
    box-shadow: 0 0 0 1px rgba(34, 36, 38, 0.15) inset;
    background-color: #fff;
    color: rgba(0, 0, 0, 0.6);
    font-weight: 400; }
    .btn--basic:hover, .btn--basic:focus, .btn--basic:active {
      background-color: #fff;
      box-shadow: 0 0 0 1px rgba(34, 36, 38, 0.35) inset, 0 0 0 0 rgba(34, 36, 38, 0.15) inset;
      color: rgba(0, 0, 0, 0.8); }
  .btn--primary:not(.btn--basic) {
    background-color: #2185d0;
    color: #fff;
    text-shadow: none; }
    .btn--primary:not(.btn--basic):hover, .btn--primary:not(.btn--basic):focus, .btn--primary:not(.btn--basic):active {
      background-color: #1678c2;
      color: #fff; }
  .btn--primary.btn--basic {
    box-shadow: 0 0 0 1px #2185d0 inset;
    color: #2185d0; }
    .btn--primary.btn--basic:hover, .btn--primary.btn--basic:focus, .btn--primary.btn--basic:active {
      box-shadow: 0 0 0 1px #1678c2 inset;
      color: #1678c2; }
  .btn--secondary:not(.btn--basic) {
    background-color: #1b1c1d;
    color: #fff;
    text-shadow: none; }
    .btn--secondary:not(.btn--basic):hover, .btn--secondary:not(.btn--basic):focus, .btn--secondary:not(.btn--basic):active {
      background-color: #27292a;
      color: #fff; }
  .btn--secondary.btn--basic {
    box-shadow: 0 0 0 1px #1b1c1d inset;
    color: #1b1c1d; }
    .btn--secondary.btn--basic:hover, .btn--secondary.btn--basic:focus, .btn--secondary.btn--basic:active {
      box-shadow: 0 0 0 1px #27292a inset;
      color: #27292a; }
  .btn--positive:not(.btn--basic) {
    background-color: #21ba45;
    color: #fff;
    text-shadow: none; }
    .btn--positive:not(.btn--basic):hover, .btn--positive:not(.btn--basic):focus, .btn--positive:not(.btn--basic):active {
      background-color: #16ab39;
      color: #fff; }
  .btn--positive.btn--basic {
    box-shadow: 0 0 0 1px #21ba45 inset;
    color: #21ba45; }
    .btn--positive.btn--basic:hover, .btn--positive.btn--basic:focus, .btn--positive.btn--basic:active {
      box-shadow: 0 0 0 1px #16ab39 inset;
      color: #16ab39; }
  .btn--negative:not(.btn--basic) {
    background-color: #db2828;
    color: #fff;
    text-shadow: none; }
    .btn--negative:not(.btn--basic):hover, .btn--negative:not(.btn--basic):focus, .btn--negative:not(.btn--basic):active {
      background-color: #d01919;
      color: #fff; }
  .btn--negative.btn--basic {
    box-shadow: 0 0 0 1px #db2828 inset;
    color: #db2828; }
    .btn--negative.btn--basic:hover, .btn--negative.btn--basic:focus, .btn--negative.btn--basic:active {
      box-shadow: 0 0 0 1px #d01919 inset;
      color: #d01919; }
  .btn--disabled {
    opacity: 0.45;
    box-shadow: none;
    cursor: default;
    pointer-events: none; }
  .btn--fluid {
    display: block;
    width: 100%; }
  .btn--truncate {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis; }
  .btn--loading {
    position: relative;
    color: transparent !important;
    cursor: default;
    pointer-events: auto; }
    .btn--loading:before {
      position: absolute;
      content: '';
      top: 50%;
      left: 50%;
      width: 14px;
      height: 14px;
      margin: -9px 0 0 -9px;
      border-radius: 100%;
      border-top: 2px solid rgba(0, 0, 0, 0.15);
      border-right: 2px solid rgba(0, 0, 0, 0.15);
      border-bottom: 2px solid rgba(0, 0, 0, 0.15);
      border-left: 2px solid #000;
      animation: loader .6s linear;
      animation-iteration-count: infinite; }
    .btn--loading:not(.btn--basic).btn--primary:before, .btn--loading:not(.btn--basic).btn--secondary:before, .btn--loading:not(.btn--basic).btn--positive:before, .btn--loading:not(.btn--basic).btn--negative:before {
      border-left: 2px solid #fff; }

@keyframes loader {
  from {
    transform: rotate(0deg); }
  to {
    transform: rotate(360deg); } }

input[type=text],
input[type=email],
input[type=search],
input[type=password] {
  -webkit-appearance: none;
  -moz-appearance: none; }

.input {
  -ms-flex: 1 0 auto;
      flex: 1 0 auto;
  max-width: 100%;
  padding: 8px 20px;
  outline: 0;
  border: 1px solid rgba(34, 36, 38, 0.15);
  border-radius: 4px;
  background-color: #fff;
  color: rgba(0, 0, 0, 0.87);
  font-family: Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-size: 14px;
  line-height: 18px;
  text-align: left;
  transition: border-color .1s ease;
  /**********************
      Global modificators
    ***********************/
  /* Disabled */
  /* Readonly */
  /* Fluid */
  /* Error */ }
  .input:not(.input--error):focus {
    border-color: #85B7d9;
    color: rgba(0, 0, 0, 0.8); }
  .input--disabled, .input--readonly {
    opacity: 0.45;
    pointer-events: none; }
  .input--readonly {
    background-color: #eee;
    pointer-events: none; }
  .input--fluid {
    display: block;
    width: 100%; }
  .input--error {
    border-color: #e0b4b4;
    background-color: #fff6f6;
    color: #9f3a38; }

.input-extra {
  padding: 8px 11px;
  border: 1px solid rgba(34, 36, 38, 0.15);
  border-radius: 4px;
  background-color: #e8e8e8;
  color: rgba(0, 0, 0, 0.87);
  font-size: 14px;
  font-weight: 700;
  line-height: 18px; }
  .input-extra--basic {
    background-color: #fff; }

.input-group {
  position: relative;
  display: inline-table;
  vertical-align: middle;
  /********
      Addon
    *********/
  /********
      Input
    *********/ }
  .input-group--fluid {
    display: table;
    width: 100%; }
  .input-group__addon {
    display: table-cell; }
    .input-group__addon:first-child {
      border-right: none;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0; }
    .input-group__addon:last-child {
      border-left: none;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0; }
    .input-group__addon:not(:first-child):not(:last-child) {
      border-radius: 0; }
  .input-group--fluid > .input-group__addon {
    width: 1%; }
  .input-group__input {
    display: table-cell;
    width: 100%; }
    .input-group__input:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0; }
    .input-group__input:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0; }

.form__row {
  margin: 0 -10px;
  font-size: 0; }

.form__group {
  display: inline-block;
  vertical-align: middle;
  width: 100%; }
  .form__group--1of2 {
    width: 50%;
    padding: 0 10px; }
  .form__group--1of3 {
    width: 33.3%;
    padding: 0 10px; }

.form__group:not(:last-child):not([class*="of"]), .form__row:not(:last-child) {
  margin-bottom: 14px; }

.form__label {
  display: inline-block;
  margin-bottom: 5px;
  color: rgba(0, 0, 0, 0.87);
  font-size: 14px;
  font-family: Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-weight: 700; }

/*# sourceMappingURL=data:application/json;base64, */
